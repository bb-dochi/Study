# Question5
정수 배열과 타겟 숫자가 주어지면, 합이 타겟값이 되는 두 원소의 인덱스를 찾으시오.  
단, 시간복잡도 O(n) 여야 합니다.  
  
Given an array of integers and a target integer, find two indexes of the array element that sums to the target number.
  
  
예제)  
Input: [2, 5, 6, 1, 10], 타겟 8  
Output: [0, 2] // 배열[0] + 배열[2] = 8  
  
  
# 풀이1 : 시간복잡도 부적합
원래 이중반복문으로 해결할까 했으나 시간복잡도가 O(n2)가 되어 실패  

# 풀이2 : 해쉬맵 사용
도저히 못 풀겠어서 해설 찾아보니 해쉬맵 사용. containsKey의 시간복잡도  O(1)  
해쉬맵 key: 배열value / value: index를 넣기  

1) 해쉬맵 containsKey를 사용해서 타겟값 - 현재배열값2)이 나오면 해당인덱스,현재인덱스 리턴  
2) 안나오면 현재배열값,인덱스를 해쉬맵에 저장하여 반복  
3) 끝까지 못 찾으면 null리턴  

```java
public int[] solution(int[] arr, int target) {
	HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
		
	for(int i=0; i<arr.length; i++) {
		int sub = target - arr[i];
		if(map.containsKey(sub)) {
			int[] answer = {map.get(sub), i};
			return answer;
		}
		map.put(arr[i], i);
	}
		
	return null;
}
```